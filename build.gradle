plugins {
    id 'java'
}

group 'com.primary'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.yaml:snakeyaml:1.26'
    implementation group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

test{

    systemProperty "environment", System.getProperty("environment")
    systemProperty "site", System.getProperty("site")
    def env = (System.getProperty("environment") == null || System.getProperty("environment") == "")
            ? "production"
            : System.getProperty("environment")
    def tags = (System.getProperty("tags") == null || System.getProperty("tags") == "")
            ? 'regression'
            : System.getProperty("tags")

    useJUnitPlatform(){
        includeTags tags
    }

    beforeSuite { desc ->
        if(!desc.parent){
            println "\nStarting tests for '${env.toUpperCase()}'\nTags: ${tags}"
        }
    }

    afterTest { desc, res ->
        logger.lifecycle "\n-------------------------------------------------------------------------------------------\n" +
                "\nTest: ${desc.displayName}\nClass: ${desc.className}\nResult: ${res}"
        if(res.exception != null) {
            logger.lifecycle "\nException: ${res.exception}"
        }
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
}
